---
name: rust
on:
  push:
    paths:
      - rust
      - .github/workflows/rust.yaml
jobs:
  rust-projects:
    name: rust-projects
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: |
          mapfile -d $'\0' projects < <(find rust -maxdepth 1 -type d -not -path rust -printf '%P\0')
          echo -n '::set-output name=matrix::{"project": ['
          printf '"%s",' "${projects[@]}" | sed '$s/,$//'
          echo ']}'
  check:
    name: check
    needs: rust-projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.rust-projects.outputs.matrix) }}
    steps:
      - name: checkout sources
        uses: actions/checkout@v2

      - name: install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: run cargo fmt
        run: |
          cd rust/${{ matrix.project }}
          cargo fmt --all -- --check

      - name: run cargo clippy
        run: |
          cd rust/${{ matrix.project }}
          cargo clippy -- -D warnings

      - run: |
          cd rust/${{ matrix.project }}
          if [ -f docker-compose.yml ]; then
            docker-compose up -d
          fi
      - run: |
          cd rust/${{ matrix.project }}
          cargo test
