---
name: golang
on:
  push:
    paths:
      - go/**
      - .github/workflows/golang.yaml
jobs:
  go-projects:
    name: go-projects
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          mapfile -d $'\0' projects < <(find go -maxdepth 1 -type d -not -path go -printf '%P\0')
          echo -n '::set-output name=matrix::{"project": ['
          printf '"%s",' "${projects[@]}" | sed '$s/,$//'
          echo ']}'
  golangci:
    name: lint
    needs: go-projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.go-projects.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.1.0
        with:
          version: latest
          working-directory: go/${{ matrix.project }}

  go:
    name: test
    needs: go-projects
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.go-projects.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.18'
      - run: |
          cd go/${{ matrix.project }}
          if [ -f docker-compose.yml ]; then
            docker-compose up -d
          fi
      - run: cd go/${{ matrix.project }} && go test ./...
